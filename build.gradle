buildscript {
    repositories {
        mavenCentral()
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"

            }
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}
plugins {
    id 'java'
    id "com.github.breadmoirai.github-release" version "2.3.7"
    id 'net.minecrell.plugin-yml.bukkit' version '0.5.1'
    id "com.modrinth.minotaur" version "1.2.1"
    id 'io.github.CDAGaming.cursegradle' version "1.6.0"
}
apply plugin: 'com.github.johnrengelman.shadow'

version = "3.0.1"
group = "de.erdbeerbaerlp.dcintegration"
archivesBaseName = "dcintegration-spigot"


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//ShadowJar
configurations {
    embed
    compileOnly.extendsFrom(embed)
}
shadowJar {
    classifier = '1.20.1'
    configurations = [project.configurations.embed]
    exclude "/org/sqlite/**"
}
artifacts {
    archives tasks.shadowJar
}

//Generates plugin.yml
bukkit {
    name = "DiscordIntegration"
    main = "de.erdbeerbaerlp.dcintegration.spigot.DiscordIntegrationPlugin"
    author = "ErdbeerbaerLP"
    apiVersion = "1.18"
    version = project.version
    website = "https://modrinth.com/plugin/dcintegration/"
    commands {
        discord {
            aliases = ["dc"]
            permission = "dcintegration.discord"
        }
    }
    permissions {
        'dcintegration.discord' {
            description = "Gives access to the basic Discord Integration commands"
            setDefault('TRUE')
        }
        'dcintegration.admin' {
            description = "Gives access to the Discord Integration admin subcommands (like reload)"
            setDefault('OP')
        }
    }
    softDepend = ["Votifier", "dynmap", "floodgate-bukkit"]
}


repositories{
    maven { url 'https://jitpack.io' }
    maven{ url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url "https://nexus.vankka.dev/repository/maven-public/" }
    maven { url "https://repository.dev.gotan.io/repository/gotan.os/" }
    maven { url "https://repo.opencollab.dev/maven-snapshots" }
    maven { url "https://repo.opencollab.dev/maven-releases"  }
    flatDir {
        dirs 'libs'
    }
    maven { url "https://repo.erdbeerbaerlp.de/repository/maven-public/" }
    mavenLocal()
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 1, 'minutes'
    }
}
dependencies{

    // =========  Common  =====================
    embed('de.erdbeerbaerlp:dcintegration.common:3.0.1') {
        changing = true
    }


    // ============= Spigot =============
    compileOnly 'org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT'


    //Votifier
    compileOnly('com.github.vexsoftware:votifier:v1.9'){
        transitive = false
    }

    //Dynmap-Bukkit for workaround
    compileOnly('com.github.webbukkit.dynmap:dynmap-api:v3.1'){
        transitive = false
    }

    //Floodgate
    compileOnly('org.geysermc.floodgate:api:2.1.1-SNAPSHOT')

    //Dynmap-API
    compileOnly('com.github.webbukkit:DynmapCoreAPI:2.5')

    //Logging
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
}
//Manifest attributes
jar {
    classifier = "1.20.1"
}

//Curseforge publishing
curseforge {
    if (project.hasProperty('curseforge.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        apiKey = getProperty("curseforge.apikey")
        project {
            id = '440292'
            changelog = project.changelog
            releaseType = project.releaseType.toLowerCase()
            addGameVersion("1.20")
            addGameVersion("1.19")
            addGameVersion("1.18")
            mainArtifact(jar) {
                it.displayName = "DiscordIntegration-Spigot $version (MC 1.20.1)"
            }
        }
        options{
            bukkitIntegration = true
            javaVersionAutoDetect = false
            javaIntegration = true
        }
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth(type: TaskModrinthUpload) {

    if (project.hasProperty('modrinth.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        token = getProperty("modrinth.apikey") // Use an environment property!
        projectId = 'rbJ7eS5V'
        versionNumber = version+"spigot1.20.1"
        versionName = "DiscordIntegration-Spigot $version (MC 1.20.1)"
        uploadFile = shadowJar
        changelog = project.changelog
        addGameVersion('1.18.2')
        addGameVersion('1.19.4')
        addGameVersion('1.20.1')
        addLoader('spigot')
        addLoader('paper')
        releaseType = project.releaseType.toUpperCase()
    }
}

task release {

}
tasks.release.dependsOn(tasks.build, tasks.curseforge, tasks.publishModrinth)